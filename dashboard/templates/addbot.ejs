<%- include('blocks/header', { bot, user, title: "New Bot" }) %>
<%
  if (sucess) {
%>
<div class="alert alert-success" role="alert">
    <%= sucess %>
</div>
<%
  }
%>

<%
  if (fail) {
%>
<div class="alert alert-danger" role="alert">
    <%= fail %>
</div>
<%
  }
%>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://discordbots.org/lib/codemirror/codemirror.css">
<link rel="stylesheet" href="https://discordbots.org/lib/codemirror/monokai.css">
<style>
.CodeMirror,
.CodeMirror-scroll {
    max-height: 300px;
}
</style>
<script src="https://discordbots.org/lib/codemirror/codemirror.js"></script>
<script src="https://discordbots.org/lib/codemirror/markdown.js"></script>
<script src="https://discordbots.org/lib/codemirror/xml.js"></script>

<div class="jumbotron" style="margin: 10px; background-color:#26272b; color: #ffffff;">
  <form method="post">
    <strong><span style="color: #ff0000">* = requiered field</span></strong><br><br>
    <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>Bot's Client ID <span style="color: #ff0000">*</span></strong></label>
			<input type="text" style="width: 225px;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="clientID" placeholder="560869129310175243" required>
    </div>
    
    <div class="form-group">
			<p><strong>Library <span style="color: #ff0000">*</span></strong></p>
			<select name="library" data-width="225px" class="selectpicker form-control"  required>
          <option value="">Pick one...</option>
          <option value="discordcr">discordcr</option>
          <option value="Nyxx">Nyxx</option>
          <option value="Discord.Net">Discord.Net</option>
          <option value="DSharpPlus">DSharpPlus</option>
          <option value="Nostrum">Nostrum</option>
          <option value="coxir">coxir</option>
          <option value="DiscordGo">DiscordGo</option>
          <option value="Discord4J">Discord4J</option>
          <option value="Javacord">Javacord</option>
          <option value="JDA">JDA</option>]
          <option value="discord.js">discord.js</option>
          <option value="Eris">Eris</option>
          <option value="Discordia">Discordia</option>
          <option value="RestCord">RestCord</option>
          <option value="Yasmin">Yasmin</option>
          <option value="disco">disco</option>
          <option value="discord.py">discord.py</option>
          <option value="discordrb">discordrb</option>
          <option value="serenity">serenity</option>
          <option value="SwiftDiscord">SwiftDiscord</option>
          <option value="Sword">Sword</option>
          <option value="Other">Other</option>
			</select>
		</div>

    <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>Prefix <span style="color: #ff0000">*</span></strong></label>
      <input type="text" style="width: 225px;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="prefix" placeholder="!" required>
    </div>

    <div class="form-group">
        <label for="exampleSelect1" style="right: 100%;"><strong>Short Description <span style="color: #ff0000">*</span></strong></label>
        <input type="text" style="width: 100%;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="shortDesc" placeholder="A small multipurpose bot with a wide range of features." maxlength="140" required>
    </div>

    <div class="form-group">
        <label for="exampleSelect1" style="right: 100%;"><strong>Long Description <span style="color: #ff0000">*</span></strong></label>
        <textarea type="text" style="width: 100%;" class="form-control mb-2 mr-sm-2 mb-sm-0 longdesc" id="longdesc" name="longdesc" placeholder="A small multipurpose bot with a wide range of features." required></textarea>
    </div>

    <script>

        function request(opts, callback){
          var xhr = new XMLHttpRequest()
          xhr.onreadystatechange = function(){
            if (xhr.readyState != 4) return
            if (xhr.status >= 200 && xhr.status < 400) {
              return callback(null, xhr.getResponseHeader("Content-Type") != null && xhr.getResponseHeader("Content-Type").indexOf("application/json") != -1 ? JSON.parse(xhr.responseText) : xhr.responseText, xhr)
            }
            var msg = xhr.responseText || "Error"
            callback(Error(msg), null, xhr)
          }
          xhr.open(opts.method || "GET", opts.url)
          for (var key in opts.headers) {
            xhr.setRequestHeader(key, opts.headers[key])
          }
          xhr.send(opts.data)
          return xhr
        }
        
        var editor = CodeMirror.fromTextArea(document.getElementById('longdesc'), {mode: 'markdown', lineNumbers: true, theme: 'monokai'});
        
        function changeLang(el) {
          var sections = document.querySelectorAll('.example');
          for (var section of sections) {
            section.style.display = 'none';
          }
          document.getElementById(el.value).style.display = 'block';
        }
        function changeType(el) {
            document.querySelectorAll('.wtype').forEach(function(span){
                if (el.value == "large") span.innerHTML = "";
                else span.innerHTML = el.value + '/';
            });
            if (el.value == "large") document.getElementById('showAvatarDiv').style.display = 'none';
            else document.getElementById('showAvatarDiv').style.display = 'block';
            updateImage();
            changeAvatar();
        }
        function changeAvatar() {
            var el = document.getElementById('showAvatar');
            if (el.checked) {
                document.querySelectorAll('.qavatar').forEach(function(span){
                    if (document.getElementById('typeselect').value == "large") span.innerHTML = "";
                    else span.innerHTML = '?noavatar=true';
                });
            } else {
                document.querySelectorAll('.qavatar').forEach(function(span){
                    span.innerHTML = "";
                });
            }
            updateImage();
        }
        function updateImage() {
            var type = document.getElementById('typeselect').value;
            var avatar = document.getElementById('showAvatar').checked;
            console.log(type)
            var url = "https://discordbots.org/api/widget/";
            if (type != "large") url += type + "/";
            url += ".svg";
            if (type != "large" && avatar) url += "?noavatar=true"
            document.getElementById('previewidget').src = url;
        }
        function showToken(el){
            el.remove();
            document.getElementById('token').style.display = 'block';
        }
        function closeModal(el) {
            el.parentNode.classList.remove('is-active');
            document.getElementById('previewframecontainer').innerHTML = "";
          }
        function githubChange(e) {
          var r = /(https?:\/\/)?github.com\/[a-zA-Z0-9]+\/[a-zA-Z0-9]+/i;
          var i = document.getElementById('githubimport')
          if (e.value.match(r)) {
            i.style.display = '';
          } else {
            i.style.display = 'none';
          }
        }
        function importReadme(hasClickedTheFunLittleYesButtonOnThePopup) {
          if (hasClickedTheFunLittleYesButtonOnThePopup) {
            document.getElementById('importconfirm').classList.remove('is-active');
            var git = document.getElementById('github').value;
            git = git.replace(/(https?:\/\/)?github.com\//i, '');
            request({url: 'https://raw.githubusercontent.com/'+git+'/master/README.md'}, function(err, res) {
              if (err) return alert('There was a problem importing that readme :Thonk:');
              document.getElementById('longdesc').value = res;
              editor.setValue(res);
            });
          } else {
            document.getElementById('importconfirm').classList.add('is-active');
          }
        }
        githubChange(document.getElementById('github'));
        </script>

  <div class="form-group">
    <p><strong>Tags <span style="color: #ff0000">*</span></strong></p>
    <select name="tags" style="width: 100%;" class="selectpicker form-control" data-live-search="true" multiple required>
    <option data-tokens="Music" value="Music">Music</option>
    <option data-tokens="Moderation" value="Moderation">Moderation</option>
    <option data-tokens="Fun" value="Fun">Fun</option>
    <option data-tokens="Logging" value="Logging">Logging</option>
    <option data-tokens="Role Management" value="Role Management">Role Management</option>
    <option data-tokens="Game" value="Game">Game</option>
    <option data-tokens="Meme" value="Meme">Meme</option>
    <option data-tokens="Anime" value="Anime">Anime</option>
    <option data-tokens="NSFW" value="NSFW">NSFW</option>
    <option data-tokens="Social" value="Social">Social</option>
    <option data-tokens="Web Dashboard" value="Web Dashboard">Web Dashboard</option>
    <option data-tokens="Leveling" value="Leveling">Leveling</option>
    <option data-tokens="Roleplay" value="Roleplay">Roleplay</option>
    <option data-tokens="Utility" value="Utility">Utility</option>
    <option data-tokens="Soundboard" value="Soundboard">Soundboard</option>
    <option data-tokens="Statistics" value="Statistics">Statistics</option>
    </select>
  </div>

  <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>Support Server Invite <span style="color: #ff0000">*</span></strong></label><br>
			<h5 style="float: left; top: 6px!important; position: relative;">https://discord.gg/</h5><input type="text" style="width: 100px;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="supportServer" placeholder="ak7tde" required>
  </div>

  <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>Other owners of this bot</strong></label>
			<input type="text" style="width: 100%;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="otherOwners" placeholder="414764511489294347, 538855659714641960">
  </div>

  <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>GitHub URL</strong></label>
			<input type="text" style="width: 100%;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="github" placeholder="https://github.com/MrAugu/lutu-bot">
  </div>

  <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>Website URL</strong></label>
			<input type="text" style="width: 100%;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="website" placeholder="https://mybot.com">
  </div>

  <div class="form-group">
      <label for="exampleSelect1" style="right: 100%;"><strong>Invite URL [<a href="https://discordapi.com/permissions.html">Generator</a>]</strong></label>
			<input type="text" style="width: 100%;" class="form-control mb-2 mr-sm-2 mb-sm-0" name="inviteURL">
  </div>

  <button type="submit" onclick="document.forms[0].submit()" class="btn btn-outline-primary btn-block">Submit</button>
  </form>
</div>

<%- include('blocks/footer') %>
